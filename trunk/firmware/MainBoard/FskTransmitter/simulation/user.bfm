#===========================================================
# Enter your BFM commands in this file. 
#
# Syntax: 
# ------- 
#
# memmap    resource_name base_address;
#
# write     width resource_name byte_offset data;
# read      width resource_name byte_offset;
# readcheck width resource_name byte_offset data;
#
#===========================================================

procedure user_main;

# uncomment the following include if you have soft peripherals in the fabric
# that you want to simulate.  The subsystem.bfm file contains the memory map
# of the soft peripherals.
include "subsystem.bfm"

# add your BFM commands below:

# Address constants

constant TX_CTRL 0x00; # ENABLE BIT
constant TX_DPHA 0x04;


constant AMPL_I  0x00;
constant AMPL_Q  0x04;
constant DELAY_I 0x08;
constant DELAY_Q 0x0C;

# f_FAB_CLK is assumed to be 20 MHz

# TX register values for BFM
#constant DPHA 0x000370ce; # 1.05 kHz
constant DPHA 0x00003001; # 1.05 kHz


#wait 500;

print "";
print "************************************************************";
print "*            Testing custom APB slave block                *";
print "************************************************************";
print "";

#write w FSK_TX_APB_IF_0 TX_CTRL 0x00;
#write w FSK_TX_APB_IF_0 TX_DPHA DPHA
#wait 500;
#write w FSK_TX_APB_IF_0 TX_CTRL 0x01;

wait 70;
write w IQ_COMPENSATION_0 AMPL_I 0x40000000
#write w IQ_COMPENSATION_0 AMPL_Q 0x40000000
write w IQ_COMPENSATION_0 AMPL_Q 0xC0000000
write w IQ_COMPENSATION_0 DELAY_I 0x00
write w IQ_COMPENSATION_0 DELAY_Q 0x0

wait 5;
#readcheck w IQ_COMPENSATION_0 AMPL_I 0x01
#readcheck w IQ_COMPENSATION_0 AMPL_Q 0x02
#readcheck w IQ_COMPENSATION_0 DELAY_I 0x03
#readcheck w IQ_COMPENSATION_0 DELAY_Q 0x04

wait 100;

wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;

return
