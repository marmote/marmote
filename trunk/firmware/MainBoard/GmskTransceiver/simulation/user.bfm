#===========================================================
# Enter your BFM commands in this file. 
#
# Syntax: 
# ------- 
#
# memmap    resource_name base_address;
#
# write     width resource_name byte_offset data;
# read      width resource_name byte_offset;
# readcheck width resource_name byte_offset data;
#
#===========================================================

procedure user_main;

# uncomment the following include if you have soft peripherals in the fabric
# that you want to simulate.  The subsystem.bfm file contains the memory map
# of the soft peripherals.
include "subsystem.bfm"

# add your BFM commands below:

# Address constants

constant TX_CTRL 0x00; # ENABLE BIT
constant TX_DATA 0x04;

# f_FAB_CLK is assumed to be 20 MHz

# TX register values for BFM


#wait 500;

print "";
print "************************************************************";
print "*            Testing custom APB slave block                *";
print "************************************************************";
print "";

write w TX_APB_IF_0 TX_CTRL 0x00;

## Random bytes
#write w TX_APB_IF_0 TX_DATA 0xAA;
#write w TX_APB_IF_0 TX_DATA 0x20;
#
## Sync frame
#write w TX_APB_IF_0 TX_DATA 0x70;
#write w TX_APB_IF_0 TX_DATA 0xEE;
#write w TX_APB_IF_0 TX_DATA 0xD2;

# Data
write w TX_APB_IF_0 TX_DATA 0xAB;
write w TX_APB_IF_0 TX_DATA 0xCD;
write w TX_APB_IF_0 TX_DATA 0xEF;
write w TX_APB_IF_0 TX_DATA 0x01;
write w TX_APB_IF_0 TX_DATA 0x22;

#wait 10;

write w TX_APB_IF_0 TX_CTRL 0x01; # start

wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 100;

readcheck w RX_APB_IF_0 0x04 0x00;
readcheck w RX_APB_IF_0 0x04 0xAB;
readcheck w RX_APB_IF_0 0x04 0xCD;
readcheck w RX_APB_IF_0 0x04 0xEF;
readcheck w RX_APB_IF_0 0x04 0x01;

#read w RX_APB_IF_0 0x04;
#read w RX_APB_IF_0 0x04;
#read w RX_APB_IF_0 0x04;
#read w RX_APB_IF_0 0x04;

wait 100;

write w TX_APB_IF_0 TX_DATA 0xAB;
write w TX_APB_IF_0 TX_DATA 0xCD;
write w TX_APB_IF_0 TX_DATA 0xEF;
write w TX_APB_IF_0 TX_DATA 0x02;

#wait 10;

write w TX_APB_IF_0 TX_CTRL 0x01; # start

wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 100;

read w RX_APB_IF_0 0x04;
read w RX_APB_IF_0 0x04;
read w RX_APB_IF_0 0x04;
read w RX_APB_IF_0 0x04;
read w RX_APB_IF_0 0x04;


return
