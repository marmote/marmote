#===========================================================
# Enter your BFM commands in this file. 
#
# Syntax: 
# ------- 
#
# memmap    resource_name base_address;
#
# write     width resource_name byte_offset data;
# read      width resource_name byte_offset;
# readcheck width resource_name byte_offset data;
#
#===========================================================

procedure user_main;

# uncomment the following include if you have soft peripherals in the fabric
# that you want to simulate.  The subsystem.bfm file contains the memory map
# of the soft peripherals.
include "subsystem.bfm"

# add your BFM commands below:

# Address constants

constant TX_CTRL 0x00; # ENABLE BIT
constant TX_DATA 0x04;
constant TX_MOD_MUX 0x0C;

# f_FAB_CLK is assumed to be 20 MHz

# TX register values for BFM


#wait 500;

print "";
print "************************************************************";
print "*            Testing custom APB slave block                *";
print "************************************************************";
print "";

write w TX_APB_IF_0 TX_CTRL 0x00;


# Length
write w TX_APB_IF_0 TX_DATA 0x03;
# Data
write w TX_APB_IF_0 TX_DATA 0xAB;
write w TX_APB_IF_0 TX_DATA 0xCD;
write w TX_APB_IF_0 TX_DATA 0xEF;
wait 100;
# Start TX
write w TX_APB_IF_0 TX_CTRL 0x01;

wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;

readcheck w RX_APB_IF_0 0x00 0x00; # FIFO should NOT be empty

readcheck w RX_APB_IF_0 0x04 0x03;
readcheck w RX_APB_IF_0 0x04 0xAB;
readcheck w RX_APB_IF_0 0x04 0xCD;
readcheck w RX_APB_IF_0 0x04 0xEF;

readcheck w RX_APB_IF_0 0x00 0x02; # FIFO should be empty

#read w RX_APB_IF_0 0x04;
#read w RX_APB_IF_0 0x04;
#read w RX_APB_IF_0 0x04;
#read w RX_APB_IF_0 0x04;

wait 100;

write w TX_APB_IF_0 TX_DATA 0x04;
write w TX_APB_IF_0 TX_DATA 0x1A;
write w TX_APB_IF_0 TX_DATA 0x1B;
write w TX_APB_IF_0 TX_DATA 0x1C;
write w TX_APB_IF_0 TX_DATA 0x1D;

write w TX_APB_IF_0 TX_CTRL 0x01; # start

wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;
wait 500;

readcheck w RX_APB_IF_0 0x04 0x04;
readcheck w RX_APB_IF_0 0x04 0x1A;
readcheck w RX_APB_IF_0 0x04 0x1B;
readcheck w RX_APB_IF_0 0x04 0x1C;
readcheck w RX_APB_IF_0 0x04 0x1D;


return
