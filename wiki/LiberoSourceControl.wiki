#summary Log of files used by Libero SoC v10.0
#labels Phase-Support,Phase-Deploy

Abbreviations in comments:

|| RG || Regenerated by Libero if missing ||

= IGLOO project =

___Note: an IGLOO project is used first to exclude any generated cores including the MSS.___

== Step 1 - Created project ==

{{{
 component
 constraint
 coreconsole
 designer
 hdl
 phy_synthesis
+simulation
+-modelsim.ini (1) // + a .sav file (ignored)
+smartgen
+-smartgen.aws (1)
 stimulus
 synthesis
+viewdraw
+-[junk] (1) // this directory is being ignored
-igloo-test.prjx (1)
}}}

== Step 2 - Added top-level VHD file ==

{{{
 component
 constraint
 coreconsole
 designer
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2) // long XML file w/o relevant info (RG)
 phy_synthesis
+simulation
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1)
 stimulus
 synthesis
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1)
}}}

== Step 3 - Run synthesis ==

{{{
 component
 constraint
 coreconsole
 designer
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2)
 phy_synthesis
+simulation
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1)
 stimulus
+synthesis (3)
+-dummy_top_sdc.sdc // Synplify generated constraint file (RG)
+-dummy_top.so // XML file reporting synthesis outcome
+-[synthesis results] // (RG)
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1)
}}}

 * Synthesis directory filled up with files (Assuming that its content  can be ignored)
 * Content of other directories unchanged
 * Project file updated, reflects synthesis result

== Step 4 - Run compile ==

{{{
 component
 constraint
 coreconsole
+designer
+-impl
 +-dummy_top.adb // binary file; compilation result
 +-dummy_top.ide_des
 +-dummy_top.tcl // seems to be an init script for designer
                 // imports source /synthesys/dummy_top.edn
                 // saves output as dummy_top.adb
 +-[log files]
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2)
 phy_synthesis
+simulation
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1)
 stimulus
+synthesis (3)
+-[synthesis results] // (RG)
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1)
}}}

 * /designer/impl directory populated
 * Project file reflects results and reference to outpus
 * Project file also includes references to .so and .sdc files (not added manually)

== Step 5 - Run Place & Route ==

 * /designer/impl directory filled up with more log files
 * /designer/impl/dummy_top.adb updated

== Step 6 - Created constraint file == 

{{{
 component
+constraint
+-dummy_top.pdc (6)
 coreconsole
+designer
+-impl
 +-[designer output files]
 +-[log files]
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2)
 phy_synthesis
+simulation
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1)
 stimulus
+synthesis (3)
+-[synthesis results]
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1)
}}}

 * Adding the constraint file seems to affect the project file only

== Step 7 - Adding a SmartDesign ==

__Note: A SmartDesign dummy_sd was simply added to the design, which was saved afterwards. (e.g. it wasn't made a top level element)

{{{
+component
++work
 ++dummy_sd
  +-dummy_sd.cxf (7) // XML format, might accompany the .sdb file, though it contains no explicit reference to it
  +-dummy_sd.sdb (7) // binary file, seems to be (RG) (!)
+constraint
+-dummy_top.pdc (6)
 coreconsole
+designer
+-impl
 +-[designer output files]
 +-[log files]
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2)
 phy_synthesis
+simulation
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1) (7) // new XML entry <component name="dummy_sd::work"/>
+-dummy_sd_work.ixf (7) // XML file, seems to be the definition of "dummy_sd::work"
                        // contains reference path="../component/work/dummy_sd/dummy_sd.cxf"
 stimulus
+synthesis (3)
+-[synthesis results]
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1) (7) // reference to component/work/dummy_sd/dummy_sd.cxf
                         // SmartDesign list item dummy_sd
}}}

 * Files showed up under component/work/dummy_sd and smartgen
 * Project file and smartgen/smartgen.aws updated

== Step 8 - Making the SmartDesign top-level ==

{{{
+component
++work
 ++dummy_sd
  +-dummy_sd.cxf (7)
  +-dummy_sd.sdb (7)
  +-dummy_sd_tools.xml // (8) seems to accompany the top-level file (RG), it is not (RG) for dummy_top.vhd anymore
+constraint
+-dummy_top.pdc (6)
 coreconsole
+designer
+-impl
 +-[designer output files]
 +-[log files]
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2)
 phy_synthesis
+simulation
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1) (7)
+-dummy_sd_work.ixf (7)
 stimulus
+synthesis (3)
+-[synthesis results]
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1) (7)
}}}

 * File dummy_sd_tools.xml appeared


== Step 9 - Generating core from dummy_top.vhd ==

{{{
+component
++work
 ++dummy_sd
  +-dummy_sd.cxf (7)
  +-dummy_sd.sdb (7)
  +-dummy_sd_tools.xml // (8) seems to accompany the top-level file (RG), it is not (RG) for dummy_top.vhd anymore
++User
 ++Private
  ++dummy_top
   ++1.0
    ++dummy_top.xml // (9) XML component definition based on http://www.accellera.org/XMLSchema/SPIRIT/1.1/component.xsd
+constraint
+-dummy_top.pdc (6)
 coreconsole
+designer
+-impl
 +-[designer output files]
 +-[log files]
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2)
 phy_synthesis
+simulation
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1) (7)
+-dummy_sd_work.ixf (7)
 stimulus
+synthesis (3)
+-[synthesis results]
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1) (7)
}}}


== Step 10 - Instantiating dummy_top core ==

 * Libero seems to delete and regenerate /component/work/dummy_sd
 * The above files are needed in conjunction with dummy_sd_work.ixf to restore the SmartDesign canvas
 * *Note: the older SVN clients go crazy at this step as the .svn directory also gets deleted*

== Step 11 - Connecting dummy_top core to top-level ==

 * dummy_sd_work.ixf reflects the signal connections

== Step 12 - Clicking generate on dummy_sd ==

{{{
+component
++work
 ++DESIGN_IO (12)
  +-DESIGN_IO.cxf (12) // XML, seems to be empty
  +-DESIGN_IO.sdb (12) // binary
 ++DESIGN_FIRMWARE (12)
  +-DESIGN_FIRMWARE.cxf (12) // XML, seems to be empty
  +-DESIGN_FIRMWARE.sdb (12) // binary
 ++dummy_sd
  +-dummy_sd.cxf (7)
  +-dummy_sd.sdb (7)
  +-dummy_sd_tools.xml (8)
  +-dummy_sd.vhd (12) // generated VHDL file for-top level canvas dummy_sd
  +-testbench.vhd (12) // generated VHDL testbench for dummy_sd.vhd
  +-datasheet.xsl (12) // HTML, datasheet "frame"
  +-dummy_sd_DataSheet.xml (12) // XML file with reference to datasheet.xsl, dummy_top.vhd and dummy_sd.vhd and list of top-level IOs
++User
 ++Private
  ++dummy_top
   ++1.0
    ++dummy_top.xml // (9) XML component definition based on http://www.accellera.org/XMLSchema/SPIRIT/1.1/component.xsd
+constraint
+-dummy_top.pdc (6)
 coreconsole
+designer
+-impl
 +-[designer output files]
 +-[log files]
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2)
 phy_synthesis
+simulation
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1) (7)
+-DESIGN_FIRMWARE_work.ixf (12) // XML, references to corresponding file under component/work
+-DESIGN_IO_work.ixf (12) // XML, references to corresponding file under component/work
+-dummy_sd_work.ixf (7)
 stimulus
+synthesis (3)
+-[synthesis results]
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1) (7)
}}}

 * ï¿¼'Error: Parameter 'params' is missing or has invalid value.' message showed up

== Step 13 - Added a CORDIC core to the canvas ==

{{{
+component
++Actel (13)
 ++DirectCore (13)
  ++CORECORDIC (13)
   ++3.0.196 (13)
    ++lin (13)
     +-corecordic (13) // linux binary
    ++mti (13)
     +-generate.tcl (13) // TCL script to run Generator for CoreCORDIC
     +-wave.do (13) // empty
    ++rtl (13)
     ++vhdl (13)
      ++core (13)
       +-corecordic_addpackage_bit.vhd (13)
       +-corecordic_bit.vhd (13)
       +-corecordic_package_bit.vhd (13)
      ++test (13)
       ++user
        +-corecordic_tb_bit.vhd
        +-corecordic_tbpackage.vhd
    ++win (13)
     +-coreCORDIC.exe (13)
    ++CORECORDIC.cxf (13) // list of references to files in the subdirectories (including binary files)
    ++coreparameters.vhd (13) // Parameters for CORECORDIC
++work
 ++DESIGN_IO (12)
  +-DESIGN_IO.cxf (12) // XML, seems to be empty
  +-DESIGN_IO.sdb (12) // binary
 ++DESIGN_FIRMWARE (12)
  +-DESIGN_FIRMWARE.cxf (12) // XML, seems to be empty
  +-DESIGN_FIRMWARE.sdb (12) // binary
 ++dummy_sd
  +-dummy_sd.cxf (7)
  +-dummy_sd.sdb (7)
  +-dummy_sd_tools.xml (8)
  +-dummy_sd.vhd (12)
  +-testbench.vhd (12)
  +-datasheet.xsl (12)
  +-dummy_sd_DataSheet.xml (12)
++User
 ++Private
  ++dummy_top
   ++1.0
    ++dummy_top.xml (9)
+constraint
+-dummy_top.pdc (6)
 coreconsole
+designer
+-impl
 +-[designer output files]
 +-[log files]
+hdl
+-dummy_top.vhd (2)
+-dummy_top_tools.xml (2)
+package
+-corecordic_package_bit.vhd (13) // CORDIC utility functions (e.g. log2)
 phy_synthesis
+simulation
+-generate.tcl (13) // includes test parameters for CORDIC
+-modelsim.ini (1)
+smartgen
+-smartgen.aws (1) (7)
+-DESIGN_FIRMWARE_work.ixf (12)
+-DESIGN_IO_work.ixf (12)
+-dummy_sd_work.ixf (7)
 stimulus
+synthesis (3)
+-[synthesis results]
+viewdraw
+-[junk] (1)
-igloo-test.prjx (1) (7)
}}}

 * The CORDIC binary file doesn't seem to be invoked automatically

----

= SmartFusion project =